{"ast":null,"code":"var _jsxFileName = \"/Users/meiguowashington/Desktop/info 442/Group1 copy/src/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { questions, quizResultDescriptions } from './data';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // 假设每题仅单选，answers 存放题目 id 对应的选项索引\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const handleOptionClick = (questionId, optionIndex) => {\n    setAnswers({\n      ...answers,\n      [questionId]: optionIndex\n    });\n  };\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // 检查每题是否都回答了\n    for (let i = 0; i < questions.length; i++) {\n      if (answers[questions[i].id] === undefined) {\n        alert(`Please select an option for question ${i + 1}`);\n        return;\n      }\n    }\n    // 计算得分（示例逻辑）\n    const scores = {\n      Squirrel: 0,\n      Penguin: 0,\n      Owl: 0,\n      Fox: 0,\n      Raccoon: 0,\n      Cheetah: 0,\n      'Golden Retriever': 0,\n      Capybara: 0\n    };\n    questions.forEach(question => {\n      const selectedIndex = answers[question.id];\n      if (selectedIndex !== undefined) {\n        const selectedOption = question.options[selectedIndex];\n        for (let animal in selectedOption.score) {\n          scores[animal] += selectedOption.score[animal];\n        }\n      }\n    });\n    let finalAnimal = null;\n    let highestScore = -Infinity;\n    Object.keys(scores).forEach(animal => {\n      if (scores[animal] > highestScore) {\n        highestScore = scores[animal];\n        finalAnimal = animal;\n      }\n    });\n    const finalResult = quizResultDescriptions[finalAnimal];\n    setResult(finalResult);\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n\n  // 根据当前题选项数量决定选项布局：4个选项用2列，5个选项用3列\n  const gridClass = currentQuestion.options.length === 5 ? 'options-grid-5' : 'options-grid-4';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-background\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circle-border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-number-text\",\n            children: [\"#\", currentQuestionIndex + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `options-grid ${gridClass}`,\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option-card ${answers[currentQuestion.id] === index ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(currentQuestion.id, index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-text\",\n            children: option.option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-buttons\",\n        children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"nav-btn\",\n          onClick: goToPreviousQuestion,\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), currentQuestionIndex < questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"nav-btn\",\n          onClick: goToNextQuestion,\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: handleSubmit,\n          children: \"Submit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `progress-indicator ${idx === currentQuestionIndex ? 'active' : ''}`,\n          children: idx + 1\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"qiiwEwOz5YQl2G2hTg4uYd77eAI=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","questions","quizResultDescriptions","useNavigate","jsxDEV","_jsxDEV","QuizPage","_s","navigate","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","result","setResult","handleOptionClick","questionId","optionIndex","goToNextQuestion","length","goToPreviousQuestion","handleSubmit","e","preventDefault","i","id","undefined","alert","scores","Squirrel","Penguin","Owl","Fox","Raccoon","Cheetah","Capybara","forEach","question","selectedIndex","selectedOption","options","animal","score","finalAnimal","highestScore","Infinity","Object","keys","finalResult","currentQuestion","gridClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","type","q","idx","_c","$RefreshReg$"],"sources":["/Users/meiguowashington/Desktop/info 442/Group1 copy/src/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { questions, quizResultDescriptions } from './data';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\n\nconst QuizPage = () => {\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  // 假设每题仅单选，answers 存放题目 id 对应的选项索引\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState(null);\n\n  const handleOptionClick = (questionId, optionIndex) => {\n    setAnswers({ ...answers, [questionId]: optionIndex });\n  };\n\n  const goToNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // 检查每题是否都回答了\n    for (let i = 0; i < questions.length; i++) {\n      if (answers[questions[i].id] === undefined) {\n        alert(`Please select an option for question ${i + 1}`);\n        return;\n      }\n    }\n    // 计算得分（示例逻辑）\n    const scores = {\n      Squirrel: 0,\n      Penguin: 0,\n      Owl: 0,\n      Fox: 0,\n      Raccoon: 0,\n      Cheetah: 0,\n      'Golden Retriever': 0,\n      Capybara: 0,\n    };\n\n    questions.forEach((question) => {\n      const selectedIndex = answers[question.id];\n      if (selectedIndex !== undefined) {\n        const selectedOption = question.options[selectedIndex];\n        for (let animal in selectedOption.score) {\n          scores[animal] += selectedOption.score[animal];\n        }\n      }\n    });\n\n    let finalAnimal = null;\n    let highestScore = -Infinity;\n    Object.keys(scores).forEach((animal) => {\n      if (scores[animal] > highestScore) {\n        highestScore = scores[animal];\n        finalAnimal = animal;\n      }\n    });\n\n    const finalResult = quizResultDescriptions[finalAnimal];\n    setResult(finalResult);\n  };\n\n  const currentQuestion = questions[currentQuestionIndex];\n\n  // 根据当前题选项数量决定选项布局：4个选项用2列，5个选项用3列\n  const gridClass =\n    currentQuestion.options.length === 5 ? 'options-grid-5' : 'options-grid-4';\n\n  return (\n    <div className=\"quiz-page\">\n      {/* 内容区域下移以留出 Navbar 空间（Navbar 在 App.js 中引入） */}\n      <div className=\"quiz-content\">\n        <div className=\"question-header\">\n          <div className=\"question-number-container\">\n            <div className=\"circle-background\"></div>\n            <div className=\"circle-border\"></div>\n            <div className=\"question-number-text\">\n              #{currentQuestionIndex + 1}\n            </div>\n          </div>\n          <div className=\"question-text\">{currentQuestion.question}</div>\n        </div>\n\n        <div className={`options-grid ${gridClass}`}>\n          {currentQuestion.options.map((option, index) => (\n            <div\n              key={index}\n              className={`option-card ${\n                answers[currentQuestion.id] === index ? 'selected' : ''\n              }`}\n              onClick={() => handleOptionClick(currentQuestion.id, index)}\n            >\n              <div className=\"option-text\">{option.option}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"nav-buttons\">\n          {currentQuestionIndex > 0 && (\n            <button type=\"button\" className=\"nav-btn\" onClick={goToPreviousQuestion}>\n              &larr; Previous\n            </button>\n          )}\n          {currentQuestionIndex < questions.length - 1 ? (\n            <button type=\"button\" className=\"nav-btn\" onClick={goToNextQuestion}>\n              Next &rarr;\n            </button>\n          ) : (\n            <button type=\"button\" className=\"submit-btn\" onClick={handleSubmit}>\n              Submit Quiz\n            </button>\n          )}\n        </div>\n\n        <div className=\"progress-bar\">\n          {questions.map((q, idx) => (\n            <div\n              key={idx}\n              className={`progress-indicator ${\n                idx === currentQuestionIndex ? 'active' : ''\n              }`}\n            >\n              {idx + 1}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,sBAAsB,QAAQ,QAAQ;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnE;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMe,iBAAiB,GAAGA,CAACC,UAAU,EAAEC,WAAW,KAAK;IACrDL,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACK,UAAU,GAAGC;IAAY,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIT,oBAAoB,GAAGR,SAAS,CAACkB,MAAM,GAAG,CAAC,EAAE;MAC/CT,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIX,oBAAoB,GAAG,CAAC,EAAE;MAC5BC,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,SAAS,CAACkB,MAAM,EAAEK,CAAC,EAAE,EAAE;MACzC,IAAIb,OAAO,CAACV,SAAS,CAACuB,CAAC,CAAC,CAACC,EAAE,CAAC,KAAKC,SAAS,EAAE;QAC1CC,KAAK,CAAC,wCAAwCH,CAAC,GAAG,CAAC,EAAE,CAAC;QACtD;MACF;IACF;IACA;IACA,MAAMI,MAAM,GAAG;MACbC,QAAQ,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC;MACVC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE,CAAC;MACNC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACV,kBAAkB,EAAE,CAAC;MACrBC,QAAQ,EAAE;IACZ,CAAC;IAEDlC,SAAS,CAACmC,OAAO,CAAEC,QAAQ,IAAK;MAC9B,MAAMC,aAAa,GAAG3B,OAAO,CAAC0B,QAAQ,CAACZ,EAAE,CAAC;MAC1C,IAAIa,aAAa,KAAKZ,SAAS,EAAE;QAC/B,MAAMa,cAAc,GAAGF,QAAQ,CAACG,OAAO,CAACF,aAAa,CAAC;QACtD,KAAK,IAAIG,MAAM,IAAIF,cAAc,CAACG,KAAK,EAAE;UACvCd,MAAM,CAACa,MAAM,CAAC,IAAIF,cAAc,CAACG,KAAK,CAACD,MAAM,CAAC;QAChD;MACF;IACF,CAAC,CAAC;IAEF,IAAIE,WAAW,GAAG,IAAI;IACtB,IAAIC,YAAY,GAAG,CAACC,QAAQ;IAC5BC,MAAM,CAACC,IAAI,CAACnB,MAAM,CAAC,CAACQ,OAAO,CAAEK,MAAM,IAAK;MACtC,IAAIb,MAAM,CAACa,MAAM,CAAC,GAAGG,YAAY,EAAE;QACjCA,YAAY,GAAGhB,MAAM,CAACa,MAAM,CAAC;QAC7BE,WAAW,GAAGF,MAAM;MACtB;IACF,CAAC,CAAC;IAEF,MAAMO,WAAW,GAAG9C,sBAAsB,CAACyC,WAAW,CAAC;IACvD7B,SAAS,CAACkC,WAAW,CAAC;EACxB,CAAC;EAED,MAAMC,eAAe,GAAGhD,SAAS,CAACQ,oBAAoB,CAAC;;EAEvD;EACA,MAAMyC,SAAS,GACbD,eAAe,CAACT,OAAO,CAACrB,MAAM,KAAK,CAAC,GAAG,gBAAgB,GAAG,gBAAgB;EAE5E,oBACEd,OAAA;IAAK8C,SAAS,EAAC,WAAW;IAAAC,QAAA,eAExB/C,OAAA;MAAK8C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B/C,OAAA;QAAK8C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/C,OAAA;UAAK8C,SAAS,EAAC,2BAA2B;UAAAC,QAAA,gBACxC/C,OAAA;YAAK8C,SAAS,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzCnD,OAAA;YAAK8C,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACrCnD,OAAA;YAAK8C,SAAS,EAAC,sBAAsB;YAAAC,QAAA,GAAC,GACnC,EAAC3C,oBAAoB,GAAG,CAAC;UAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNnD,OAAA;UAAK8C,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEH,eAAe,CAACZ;QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAENnD,OAAA;QAAK8C,SAAS,EAAE,gBAAgBD,SAAS,EAAG;QAAAE,QAAA,EACzCH,eAAe,CAACT,OAAO,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzCtD,OAAA;UAEE8C,SAAS,EAAE,eACTxC,OAAO,CAACsC,eAAe,CAACxB,EAAE,CAAC,KAAKkC,KAAK,GAAG,UAAU,GAAG,EAAE,EACtD;UACHC,OAAO,EAAEA,CAAA,KAAM7C,iBAAiB,CAACkC,eAAe,CAACxB,EAAE,EAAEkC,KAAK,CAAE;UAAAP,QAAA,eAE5D/C,OAAA;YAAK8C,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEM,MAAM,CAACA;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,GAN7CG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnD,OAAA;QAAK8C,SAAS,EAAC,aAAa;QAAAC,QAAA,GACzB3C,oBAAoB,GAAG,CAAC,iBACvBJ,OAAA;UAAQwD,IAAI,EAAC,QAAQ;UAACV,SAAS,EAAC,SAAS;UAACS,OAAO,EAAExC,oBAAqB;UAAAgC,QAAA,EAAC;QAEzE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EACA/C,oBAAoB,GAAGR,SAAS,CAACkB,MAAM,GAAG,CAAC,gBAC1Cd,OAAA;UAAQwD,IAAI,EAAC,QAAQ;UAACV,SAAS,EAAC,SAAS;UAACS,OAAO,EAAE1C,gBAAiB;UAAAkC,QAAA,EAAC;QAErE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAETnD,OAAA;UAAQwD,IAAI,EAAC,QAAQ;UAACV,SAAS,EAAC,YAAY;UAACS,OAAO,EAAEvC,YAAa;UAAA+B,QAAA,EAAC;QAEpE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENnD,OAAA;QAAK8C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BnD,SAAS,CAACwD,GAAG,CAAC,CAACK,CAAC,EAAEC,GAAG,kBACpB1D,OAAA;UAEE8C,SAAS,EAAE,sBACTY,GAAG,KAAKtD,oBAAoB,GAAG,QAAQ,GAAG,EAAE,EAC3C;UAAA2C,QAAA,EAEFW,GAAG,GAAG;QAAC,GALHA,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAML,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CAtIID,QAAQ;EAAA,QACKH,WAAW;AAAA;AAAA6D,EAAA,GADxB1D,QAAQ;AAwId,eAAeA,QAAQ;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}